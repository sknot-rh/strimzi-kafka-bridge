{
    "swagger": "2.0",
    "info": {
        "title": "HTTP Kafka Bridge",
        "description": "This is a HTTP Kafka Bridge server",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "strimzi@redhat.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "host": "bridge.swagger.io",
    "basePath": "/v2",
    "schemes": [
        "https",
        "http"
    ],
    "paths": {
        "/consumers/{groupid}": {
            "post": {
                "tags": [
                    "Consumers"
                ],
                "summary": "Create a new consumer instance in the consumer group",
                "operationId": "createConsumer",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Consumer specification",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Consumer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/createdConsumer"
                        },
                        "examples": {}
                    },
                    "409": {
                        "description": "Consumer instance with the specified name already exists"
                    },
                    "422": {
                        "description": "Invalid consumer configuration. One of the settings specified in the request contained an invalid value"
                    }
                }
            },
            "parameters": [
                {
                    "name": "groupid",
                    "in": "path",
                    "description": "The name of the consumer group",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/consumers/{groupid}/instances/{name}": {
            "delete": {
                "tags": [
                    "Consumers"
                ],
                "summary": "Destroy the consumer instance",
                "operationId": "deleteConsumer",
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "Consumer instance not found"
                    }
                }
            },
            "parameters": [
                {
                    "name": "groupid",
                    "in": "path",
                    "description": "The name of the consumer group",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "name",
                    "in": "path",
                    "description": "The ID of the consumer instance",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/consumers/{groupid}/instances/{name}/positions/beginning": {
            "post": {
                "tags": [
                    "Consumers"
                ],
                "summary": "Seek to the first offset for each of the given partitions",
                "operationId": "seekToBeginning",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "A list of partitions",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PartitionsForPositions"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Consumer instance not found"
                    }
                }
            },
            "parameters": [
                {
                    "name": "groupid",
                    "in": "path",
                    "description": "The name of the consumer group",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "name",
                    "in": "path",
                    "description": "The ID of the consumer instance",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/consumers/{groupid}/instances/{name}/positions/end": {
            "post": {
                "tags": [
                    "Consumers"
                ],
                "summary": "Seek to the last offset for each of the given partitions",
                "operationId": "seekToEnd",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "A list of partitions",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PartitionsForPositions"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Consumer instance not found"
                    }
                }
            },
            "parameters": [
                {
                    "name": "groupid",
                    "in": "path",
                    "description": "The name of the consumer group",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "name",
                    "in": "path",
                    "description": "The ID of the consumer instance",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/consumers/{groupid}/instances/{name}/records": {
            "get": {
                "tags": [
                    "Consumers"
                ],
                "summary": "Fetch data for the topics or partitions specified using one of the subscribe/assign APIs",
                "operationId": "poll",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Records2"
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "topic": "topic",
                                    "key": "key1",
                                    "value": {
                                        "foo": "bar"
                                    },
                                    "partition": 0,
                                    "offset": 2
                                },
                                {
                                    "topic": "topic",
                                    "key": "key2",
                                    "value": [
                                        "foo2",
                                        "bar2"
                                    ],
                                    "partition": 1,
                                    "offset": 3
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Consumer instance not found"
                    },
                    "406": {
                        "description": "Consumer format does not match the embedded format requested by the Accept header"
                    }
                }
            },
            "parameters": [
                {
                    "name": "groupid",
                    "in": "path",
                    "description": "The name of the consumer group",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "name",
                    "in": "path",
                    "description": "The ID of the consumer instance",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "timeout",
                    "in": "query",
                    "description": "Maximum amount of milliseconds the REST proxy will spend fetching records",
                    "required": false,
                    "type": "integer"
                },
                {
                    "name": "max_bytes",
                    "in": "query",
                    "description": "The maximum number of bytes of unencoded keys and values that should be included in the response",
                    "required": false,
                    "type": "integer"
                }
            ]
        },
        "/consumers/{groupid}/instances/{name}/subscription": {
            "post": {
                "tags": [
                    "Consumers"
                ],
                "summary": "Subscribe to the given list of topics",
                "operationId": "subscribe",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "A list of topics to subscribe",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Topics"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Consumer instance not found"
                    },
                    "409": {
                        "description": "Subscription to topics, partitions and pattern are mutually exclusive"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Consumers"
                ],
                "summary": "Unsubscribe from topics currently subscribed",
                "operationId": "unsubscribe",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Consumer instance not found"
                    }
                }
            },
            "parameters": [
                {
                    "name": "groupid",
                    "in": "path",
                    "description": "The name of the consumer group",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "name",
                    "in": "path",
                    "description": "The ID of the consumer instance",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/topics/{topicname}": {
            "post": {
                "tags": [
                    "Topics"
                ],
                "summary": "Send a record to topic",
                "operationId": "send",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Records"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OffsetsWithoutTopic"
                        },
                        "examples": {
                            "application/json": {
                                "offsets": [
                                    {
                                        "partition": 2,
                                        "offset": 0
                                    },
                                    {
                                        "partition": 1,
                                        "offset": 1
                                    },
                                    {
                                        "partition": 2,
                                        "offset": 2
                                    }
                                ]
                            }
                        }
                    },
                    "404": {
                        "description": "Topic not found"
                    }
                }
            },
            "parameters": [
                {
                    "name": "topicname",
                    "in": "path",
                    "description": "Name of the topic",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/topics/{topicname}/partitions/{partitionid}": {
            "post": {
                "tags": [
                    "Topics"
                ],
                "summary": "Send a record to specified partition of topic",
                "operationId": "sendToPartition",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RecordsWithoutPartitions"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Partitions"
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "partition": 1,
                                    "leader": 1,
                                    "replicas": [
                                        {
                                            "broker": 1,
                                            "leader": true,
                                            "in_sync": true
                                        },
                                        {
                                            "broker": 2,
                                            "leader": false,
                                            "in_sync": true
                                        },
                                        {
                                            "broker": 3,
                                            "leader": false,
                                            "in_sync": false
                                        }
                                    ]
                                },
                                {
                                    "partition": 2,
                                    "leader": 2,
                                    "replicas": [
                                        {
                                            "broker": 1,
                                            "leader": false,
                                            "in_sync": true
                                        },
                                        {
                                            "broker": 2,
                                            "leader": true,
                                            "in_sync": true
                                        },
                                        {
                                            "broker": 3,
                                            "leader": false,
                                            "in_sync": false
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Topic or Partition not found"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    }
                }
            },
            "parameters": [
                {
                    "name": "topicname",
                    "in": "path",
                    "description": "Name of the topic",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "partitionid",
                    "in": "path",
                    "description": "ID of the partition",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/consumers/{groupid}/instances/{name}/positions": {
            "post": {
                "tags": [
                    "Consumers"
                ],
                "summary": "Overrides the fetch offsets that the consumer will use for the next set of records to fetch",
                "operationId": "seek",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "A list of offsets",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Offsets"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Consumer instance not found"
                    }
                }
            },
            "parameters": [
                {
                    "name": "groupid",
                    "in": "path",
                    "description": "The name of the consumer group",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "name",
                    "in": "path",
                    "description": "The ID of the consumer instance",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/consumers/{groupid}/instances/{name}/offsets": {
            "post": {
                "tags": [
                    "Consumers"
                ],
                "summary": "Commit a list of offsets for the consumer",
                "operationId": "commit",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "A list of offsets to commit for partitions",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Offsets"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Consumer instance not found"
                    }
                }
            },
            "parameters": [
                {
                    "name": "groupid",
                    "in": "path",
                    "description": "The name of the consumer group",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "name",
                    "in": "path",
                    "description": "The ID of the consumer instance",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/consumers/{groupid}/instances/{name}/assignments": {
            "post": {
                "tags": [
                    "Consumers"
                ],
                "summary": "Manually assign a list of partitions to the consumer",
                "operationId": "assign",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "A list of partitions to assign to the consumer",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PartitionsForPositions"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Consumer instance not found"
                    },
                    "409": {
                        "description": "Subscription to topics, partitions and pattern are mutually exclusive"
                    }
                }
            },
            "parameters": [
                {
                    "name": "groupid",
                    "in": "path",
                    "description": "The name of the consumer group",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "name",
                    "in": "path",
                    "description": "The ID of the consumer instance",
                    "required": true,
                    "type": "string"
                }
            ]
        }
    },
    "definitions": {
        "ApiResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "format": "int32",
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "Consumer": {
            "title": "Root Type for Consumer",
            "description": "The root of the Consumer type's schema.",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "format": {
                    "type": "string"
                },
                "auto.offset.reset": {
                    "type": "string"
                },
                "auto.commit.enable": {
                    "type": "string"
                },
                "fetch.min.bytes": {
                    "type": "string"
                },
                "consumer.request.timeout.ms": {
                    "type": "string"
                }
            },
            "example": "{\n    \"name\": \"consumer1\",\n    \"format\": \"binary\",\n    \"auto.offset.reset\": \"earliest\",\n    \"auto.commit.enable\": \"false\",\n    \"fetch.min.bytes\": \"512\",\n    \"consumer.request.timeout.ms\": \"30000\"\n}"
        },
        "Offset": {
            "title": "Offset",
            "required": [],
            "type": "object",
            "properties": {
                "partition": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "topic": {
                    "type": "string"
                }
            }
        },
        "Partition": {
            "title": "Partition",
            "type": "object",
            "properties": {
                "partition": {
                    "format": "int32",
                    "type": "integer"
                },
                "leader": {
                    "format": "int32",
                    "type": "integer"
                },
                "replicas": {
                    "type": "object"
                }
            },
            "example": "{\n    \"partition\": 1,\n    \"leader\": 1,\n    \"replicas\": [\n        {\n            \"broker\": 1,\n            \"leader\": true,\n            \"in_sync\": true\n        },\n        {\n            \"broker\": 2,\n            \"leader\": false,\n            \"in_sync\": false\n        }\n    ]\n}"
        },
        "Record": {
            "title": "Record",
            "required": [
                "value"
            ],
            "type": "object",
            "properties": {
                "partition": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "topic": {
                    "type": "string"
                },
                "value": {
                    "type": "object"
                },
                "key": {
                    "type": "object"
                }
            }
        },
        "RecordsWithoutPartitions": {
            "title": "Root Type for RecordsWithoutPartitions",
            "description": "The root of the RecordsWithoutPartitions type's schema.",
            "type": "object",
            "properties": {
                "records": {
                    "$ref": "#/definitions/Records"
                }
            },
            "example": "{\n    \"records\": [\n        {\n            \"key\": \"1abcd\",\n            \"value\": \"msg1\"\n        },\n        {\n            \"value\": \"msg2\"\n        }\n    ]\n}"
        },
        "Topics": {
            "title": "Topics",
            "type": "object",
            "properties": {
                "topics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "example": "{\n    \"topics\": [\n        \"topic1\",\n        \"topic2\"\n    ]\n}"
        },
        "Records": {
            "title": "Records",
            "type": "object",
            "properties": {
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Record"
                    }
                }
            },
            "example": "{\n    \"records\": [\n        {\n            \"key\": \"1abcd\",\n            \"value\": \"msg1\"\n        },\n        {\n            \"value\": \"msg2\",\n            \"partition\": 1\n        },\n        {\n            \"value\": \"msg3\"\n        }\n    ]\n}"
        },
        "PartitionsForPositions": {
            "title": "PartitionsForPositions",
            "type": "object",
            "properties": {
                "partitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Partition"
                    }
                }
            },
            "example": "{\n    \"partitions\": [\n        {\n            \"topic\": \"topic\",\n            \"partition\": 0\n        },\n        {\n            \"topic\": \"topic\",\n            \"partition\": 1\n        }\n    ]\n}"
        },
        "Partitions": {
            "title": "Partitions",
            "type": "object",
            "properties": {
                "partitions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Partition"
                    }
                }
            },
            "example": "{\n    \"partitions\": [\n        {\n            \"partition\": 1,\n            \"leader\": 1,\n            \"replicas\": [\n                {\n                    \"broker\": 1,\n                    \"leader\": true,\n                    \"in_sync\": true\n                },\n                {\n                    \"broker\": 2,\n                    \"leader\": false,\n                    \"in_sync\": false\n                }\n            ]\n        },\n        {\n            \"partition\": 2,\n            \"leader\": 2,\n            \"replicas\": [\n                {\n                    \"broker\": 1,\n                    \"leader\": false,\n                    \"in_sync\": true\n                },\n                {\n                    \"broker\": 2,\n                    \"leader\": true,\n                    \"in_sync\": false\n                }\n            ]\n        }\n    ]\n}"
        },
        "Offsets": {
            "title": "Offsets",
            "type": "object",
            "properties": {
                "offsets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Offset"
                    }
                }
            },
            "example": "{\n    \"offsets\": [\n        {\n            \"topic\": \"topic\",\n            \"partition\": 0,\n            \"offset\": 15\n        },\n        {\n            \"topic\": \"topic\",\n            \"partition\": 1,\n            \"offset\": 42\n        }\n    ]\n}"
        },
        "createdConsumer": {
            "title": "Root Type for createdConsumer",
            "description": "The root of the createdConsumer type's schema.",
            "type": "object",
            "properties": {
                "instance_id": {
                    "description": "Unique ID for the consumer instance in the group",
                    "type": "string"
                },
                "base_uri": {
                    "description": "Base URI used to construct URIs for subsequent requests against this consumer instance",
                    "type": "string"
                }
            },
            "example": "{\n    \"instance_id\": \"consumer1\",\n    \"base_uri\": \"http://localhost:8080/consumers/my-group/instances/consumer1\"\n}"
        },
        "OffsetsWithoutTopic": {
            "title": "Root Type for OffsetsWithoutTopic",
            "description": "The root of the OffsetsWithoutTopic type's schema.",
            "type": "object",
            "properties": {
                "offsets": {
                    "type": "array",
                    "items": {}
                }
            },
            "example": "{\n    \"offsets\": [\n        {\n            \"partition\": 2,\n            \"offset\": 0\n        },\n        {\n            \"partition\": 1,\n            \"offset\": 1\n        },\n        {\n            \"partition\": 2,\n            \"offset\": 2\n        }\n    ]\n}"
        },
        "Records2": {
            "title": "Root Type for Records2",
            "description": "The root of the Records2 type's schema.",
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "topic": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    },
                    "value": {
                        "type": "object",
                        "properties": {
                            "foo": {
                                "type": "string"
                            }
                        }
                    },
                    "partition": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "offset": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            },
            "example": "[\n    {\n        \"topic\": \"topic\",\n        \"key\": \"key1\",\n        \"value\": {\n            \"foo\": \"bar\"\n        },\n        \"partition\": 0,\n        \"offset\": 2\n    },\n    {\n        \"topic\": \"topic\",\n        \"key\": \"key2\",\n        \"value\": [\n            \"foo2\",\n            \"bar2\"\n        ],\n        \"partition\": 1,\n        \"offset\": 3\n    }\n]"
        }
    },
    "tags": [
        {
            "name": "Consumers",
            "description": "Consumers management"
        },
        {
            "name": "Topics",
            "description": "Topics management"
        }
    ],
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    }
}